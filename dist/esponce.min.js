/*! Esponce API v0.4.0 | https://github.com/esponce-api/esponce-rest-api | MIT license */
!function(t){function o(t){var o=this;o.events={};var r={verbose:!1,url:null,userAgent:null};if(o.options=Object.assign({},r,t||{}),o.options.url||(o.options.url="https://www.esponce.com/"),!o.options.userAgent&&"function"==typeof require){var n=require("../package.json");o.options.userAgent="Esponce/"+n.version+" (JavaScript)"}"function"==typeof e.defaults&&e.defaults({headers:{Accept:"application/json","User-Agent":o.options.userAgent}}),o.request=function(t,r){try{o.options.verbose&&(console.log((t.method||"GET")+" "+o.options.url+t.route),console.log("req.headers",t.headers),console.log("req.body",t.body));var n={method:t.method||"GET",url:o.options.url+t.route,encoding:null};t.headers&&(n.headers=t.headers),t.body&&("object"==typeof t.body?n.body=JSON.stringify(t.body," ",2):n.body=t.body),e(n,function(t,e,n){try{if(t)throw t;if(e&&e.statusCode>=400){var i="HTTP Status Code "+e.statusCode;throw e.caseless&&(i+=", subcode "+(c=e.caseless.dict||{})["x-api-error-code"],i+=", details: "+c["x-api-error"]),new Error(i)}var s=null;try{var a=Object.prototype.toString.call(n);s="[object Uint8Array]"==a||"[object Buffer]"==a?0==n.length?null:JSON.parse(n.toString("utf-8")):JSON.parse(n)}catch(t){if("[object Uint8Array]"==a||"[object Buffer]"==a)if(0==n.length)s=null;else{var u=n.toString("utf-8"),p=u.replace(/[^\w\d\r\n\s\.,\-\+:"'\{\}]+/gi,"");s=p.length/u.length>=.5?u:n}else s=n}var h={};if(e&&e.caseless){var c=e.caseless.dict||{};h.meta={apiVersion:c["x-api-version"],contentType:c["content-type"],contentLength:parseInt(c["content-length"]),rateLimit:{total:parseInt(c["x-ratelimit-limit"]),remaining:parseInt(c["x-ratelimit-remaining"]),reset:parseInt(c["x-ratelimit-reset"])}}}h.data=s,"function"==typeof r&&r(null,h)}catch(t){o.options.verbose&&console.error(t),"function"==typeof r&&r(t)}})}catch(t){o.options.verbose&&console.error(t),"function"==typeof r&&r(t)}}}var e;if("object"==typeof exports||"function"==typeof define&&define.amd)e=require("request");else{if("undefined"==typeof jQuery)return console.error("Esponce library is not available in this environment! Hint: try with Node.js or web browser with jQuery.");e=function(t,o){var e={cache:!1,type:t.method||"GET",url:t.url||"#",error:function(t,e,r){o&&o(t.responseJSON||new Error(r||"Error"),{statusCode:e},null)},success:function(t,e,r){o&&o(null,{statusCode:e},t)}};t.body&&(e.data=t.body,e.dataType="json"),t.headers&&(e.headers=t.headers),t.headers&&t.headers["Content-Type"]&&(e.contentType=t.headers["Content-Type"]),console.log(e),jQuery.ajax(e)}}Array.prototype.contains=function(t){for(var o=this.length;o--;)if(this[o]===t)return!0;return!1},Object.prototype.toQueryString=function(){var t=this,o="";return Object.keys("object"==typeof t?t:{}).forEach(function(e,r){t.hasOwnProperty(e)&&/string|number|boolean/.test(typeof t[e])&&(o+=(0==o.length?"?":"&")+encodeURIComponent(e)+"="+encodeURIComponent(t[e]))}),o},o.prototype.auth=function(t){var o=this;if(0==arguments.length)return o.options.auth;o.options.auth=t},o.prototype.generate=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r=e.options.auth;if(void 0===t)throw new Error("Missing 'options' argument!");if("string"==typeof t&&(t={content:t}),"string"==typeof t.auth&&(r=t.auth),void 0===r)throw new Error("API key is missing!");if("string"!=typeof r)throw new Error("API key should be a string!");for(var n=["content","format","version","size","padding","em","ec","foreground","background","shorten","attachment","filename"],i={auth:r},s=Object.keys(t),a=0;a<s.length;a++){var u=s[a];n.contains(u)&&(i[u]=t[u])}e.request({method:"GET",route:"api/v3/generate"+i.toQueryString()},o)}catch(t){o(t)}},o.prototype.decode=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if(void 0===t)throw new Error("Image data is missing!");e.request({method:"POST",route:"api/v3/decode"+r.toQueryString(),headers:{Accept:"application/json","Content-Type":"image/png"},body:t},o)}catch(t){o(t)}},o.prototype.list=function(t){var o=this;"function"!=typeof t&&(t=function(t,o){});try{var e={auth:o.options.auth};if(void 0===e.auth)throw new Error("API key is missing!");if("string"!=typeof e.auth)throw new Error("API key should be a string!");o.request({method:"GET",route:"api/v3/track/list"+e.toQueryString(),headers:{Accept:"application/json"}},t)}catch(o){t(o)}},o.prototype.getCampaign=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("Campaign id is missing!");e.request({method:"GET",route:"api/v3/track/campaign/"+t+r.toQueryString(),headers:{Accept:"application/json"}},o)}catch(t){o(t)}},o.prototype.createCampaign=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if(void 0===t)throw new Error("Campaign data is missing!");e.request({method:"POST",route:"api/v3/track/campaign"+r.toQueryString(),headers:{Accept:"application/json","Content-Type":"application/json"},body:t},o)}catch(t){o(t)}},o.prototype.updateCampaign=function(t,o,e){var r=this;"function"!=typeof e&&(e=function(t,o){});try{var n={auth:r.options.auth};if(void 0===n.auth)throw new Error("API key is missing!");if("string"!=typeof n.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("Campaign id is missing!");if(void 0===o)throw new Error("Campaign data is missing!");r.request({method:"PUT",route:"api/v3/track/campaign/"+t+n.toQueryString(),headers:{Accept:"application/json","Content-Type":"application/json"},body:o},e)}catch(t){e(t)}},o.prototype.deleteCampaign=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("Campaign id is missing!");e.request({method:"DELETE",route:"api/v3/track/campaign/"+t+r.toQueryString()},o)}catch(t){o(t)}},o.prototype.getQRCode=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("QRCode id is missing!");e.request({method:"GET",route:"api/v3/track/qrcode/"+t+r.toQueryString(),headers:{Accept:"application/json"}},o)}catch(t){o(t)}},o.prototype.createQRCode=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if(void 0===t)throw new Error("QR Code data is missing!");e.request({method:"POST",route:"api/v3/track/qrcode"+r.toQueryString(),headers:{Accept:"application/json","Content-Type":"application/json"},body:t},o)}catch(t){o(t)}},o.prototype.updateQRCode=function(t,o,e){var r=this;"function"!=typeof e&&(e=function(t,o){});try{var n={auth:r.options.auth};if(void 0===n.auth)throw new Error("API key is missing!");if("string"!=typeof n.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("QR Code id is missing!");if(void 0===o)throw new Error("QR Code data is missing!");r.request({method:"PUT",route:"api/v3/track/qrcode/"+t+n.toQueryString(),headers:{Accept:"application/json","Content-Type":"application/json"},body:o},e)}catch(t){e(t)}},o.prototype.deleteQRCode=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{var r={auth:e.options.auth};if(void 0===r.auth)throw new Error("API key is missing!");if("string"!=typeof r.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("QR Code id is missing!");e.request({method:"DELETE",route:"api/v3/track/qrcode/"+t+r.toQueryString()},o)}catch(t){o(t)}},o.prototype.getStatistics=function(t,o,e){var r=this;"function"!=typeof e&&(e=function(t,o){});try{var n={auth:r.options.auth};if(void 0===n.auth)throw new Error("API key is missing!");if("string"!=typeof n.auth)throw new Error("API key should be a string!");if("string"!=typeof t||0==t.length)throw new Error("QR Code id is missing!");if(void 0===o)throw new Error("Argument 'options' is missing!");var i=o&&o.format?o.format:"csv";r.request({method:"GET",route:"api/v3/track/statistics/"+t+"."+i+n.toQueryString()},e)}catch(t){"function"==typeof e&&e(t)}},o.prototype.import=function(t,o,e){var r=this;"function"!=typeof e&&(e=function(t,o){});try{if(void 0===(n={auth:r.options.auth}).auth)throw new Error("API key is missing!");if("string"!=typeof n.auth)throw new Error("API key should be a string!");if(void 0===o)throw new Error("Argument 'options' is missing!");var n={format:o.format,auth:r.options.auth};r.request({method:"POST",route:"api/v3/track/import"+n.toQueryString(),headers:{Accept:"application/json"},body:t},e)}catch(t){e(t)}},o.prototype.export=function(t,o){var e=this;"function"!=typeof o&&(o=function(t,o){});try{if(void 0===(n={auth:e.options.auth}).auth)throw new Error("API key is missing!");if("string"!=typeof n.auth)throw new Error("API key should be a string!");if(void 0===t)throw new Error("Argument 'options' is missing!");var r=t.ext||"csv",n={format:t.format,auth:e.options.auth};e.request({method:"GET",route:"api/v3/track/export."+r+n.toQueryString()},o)}catch(t){o(t)}},"object"==typeof exports?module.exports=o:"function"==typeof define&&define.amd?define(function(){return o}):t.Esponce=o}(this);